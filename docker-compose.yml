version: '3.4'

services:
  postgresql_database:
    image: postgres:latest
    container_name: rest-api-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=equine-training-tracker-db
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/

  rest-api:
    build: .
    container_name: rest-api
    restart: always
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=equine-training-tracker-db
      - DATASOURCE=jdbc:postgresql://rest-api-db:5432/
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - postgresql_database

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:password@postgres:5432/equine-training-tracker-db?sslmode=disable"
    links:
      - postgresql_database
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "9000:3000"
    volumes:
      - grafana-data:/var/lib/grafana



volumes:
  database-data:
  prometheus-data:
  grafana-data:
